<page_start>1</page_start>
<p>рассуждать следующим образом. Сортировка одного элемента методом слияния длится в течение фиксированного времени. Если n > 1, время работы распределяется таким образом.</p>
<p>Разбиение. В ходе разбиения определяется, где находится средина подмассива.</p>
<p>Эта операция длится фиксированное время, поэтому D (n) = Θ (1).</p>
<p>Покорение. Рекурсивно решаются две подзадачи, объем каждой из которых составляет n/2. Время решения этих подзадач равно 2T (n/2).</p>
<p>Комбинирование. Как уже упоминалось, процедура MERGE в n-элементном подмассиве выполняется в течение времени Θ (n), п оэтому C (n)=Θ(n). Сложив функции D (n) и C (n), получим сумму величин Θ (n) и Θ (1), которая является линейной функцией от n, т.е. Θ (n). Прибавляя к этой величине слагаемое 2T (n/2), соответствующее этапу "покорения", получим рекуррентное соотношение для времени работы T (n) алгоритма сортировки по методу слияния в наихудшем случае:</p>
<formula>T\left(n\right)=\begin{cases}\Theta\left(1\right)&\text{\tt mph}n=1,\\ 2T\left(n/2\right)+\Theta\left(n\right)&\text{\tt mph}n>1.\end{cases}\tag{2.1}</formula>
<p>В главе 4 мы ознакомимся с теоремой, с помощью которой можно показать, что величина T (n) представляет собой Θ (n lg n), где lg n обозначает lg2 n. Поскольку логарифмическая функция растет медленнее, чем линейная, то для достаточно большого количества входных элементов производительность алгоритма сортировки методом слияния, время работы которого равно Θ (n lg n), превзойдет производительность алгоритма сортировки методом вставок, время работы которого в наихудшем случае равно Θ n2-.</p>
<p>Правда, можно и без упомянутой теоремы интуитивно понять, что решением рекуррентного соотношения (2.1) является выражение T (n) = Θ(n lg n). Перепишем уравнение (2.1) в таком виде:</p>
<formula>T\left(n\right)=\begin{cases}c&\text{nph}\ n=1,\\ 2T\left(n/2\right)+cn&\text{nph}\ n>1,\end{cases}\tag{2.2}</formula>
<p>где константа c обозначает время, которое требуется для решения задачи? размер который равен 1, а также удельное (приходящееся на один элемент) время, требуемое для разделения и сочетания9.</p>
<page_end>1</page_end>
<page_start>2</page_start>
<p>80 Часть I. Основы</p>
<image>1_image_0.png</image>
<p>Процесс решения рекуррентного соотношения (2.2) проиллюстрирован на рис. 2.5. Для удобства предположим, что n равно степени двойки. В части а упомянутого рисунка показано время T (n), представленное в части б в виде эквивалентного дерева, которое представляет рекуррентное уравнение. Корнем этого дерева является слагаемое cn (стоимость верхнего уровня рекурсии), а два</p>
<page_end>2</page_end>
